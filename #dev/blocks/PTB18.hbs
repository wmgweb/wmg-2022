<div id="block-{{ blockCount }}" class="block block-PTB block-PTB18">
	<div class="container">
		<div class="block__content">
			<div class="PTB18-intro">
				[!triangle]
				<h2>{{{title}}}</h2>
			</div>
			<div class="row">
				<div class="col-12 col-md-3 PTB19-col-1">
					<div class="PTB18-sidebar">
						<button class="PTB18-filter-button">Filter <svg width="24" height="16" viewBox="0 0 24 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.7254 14.9893L0.528584 5.11929C-0.176195 4.4371 -0.176195 3.33399 0.528584 2.65905L2.22305 1.0189C2.92783 0.336708 4.06748 0.336708 4.76476 1.0189L12 8.00771L19.2277 1.01164C19.9325 0.32945 21.0722 0.32945 21.7694 1.01164L23.4714 2.6518C24.1762 3.33399 24.1762 4.4371 23.4714 5.11203L13.2746 14.982C12.5698 15.6715 11.4302 15.6715 10.7254 14.9893Z" fill="#E6E8EA"/></svg></button>
						<div class="PTB18-filter"></div>
					</div>
				</div>
				<div class="col-12 col-md-9 PTB19-col-2">
					<div class="PTB18-grid" data-count="12">
						<div class="row"></div>
					</div>
					<div class="PTB18-more"><button class="btn btn--theme">View More</button></div>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	jQuery(document).ready(function($) {
		blockFunctions('{{ blockCount }}');
		var $block = $('#block-{{ blockCount }}').parent('.wmg-block');
		var contentURL = $block.data('content_url');

		// Function to render posts. Uses main postsQuery function. 
		function PTB18RenderPosts() {
			var activeTags = '';
			var scrollPosition = document.documentElement.scrollTop;
			var postsCount = $('.PTB18-grid', $block).attr('data-count');

			// Get all active filters
			$('.PTB18-filter input:checked', $block).each(function(key) {
				if(key > 0) {
					activeTags = activeTags + ',';
				}
				activeTags = activeTags + $(this).val();
			});

			var postsData = postsQuery(contentURL, postsCount, activeTags);

			// If post data is returned
			if(postsData != false) {
				var posts = '';

				// Loop through all post data
				$.each(postsData, function(key, data) {

					// Add to posts string
					posts = posts + '<div class="col-12 col-sm-6 col-md-4"><a href="' + $block.data('posts_article_page') + '?id=' + data.id + '" class="post-card border-color--theme"><div class="post-card__image"><img src="' + blockPostImage(data.content, contentURL) + '"><svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M34.1855 35L0.867523 35L0.867528 -1.83932e-06L34.1855 35Z" fill="#E6E8EA"/></svg></div><div class="post-card__content"><span class="post-card__date">' + blockPostDate(data.publicationDate) + '</span><h4 class="post-card__heading">' + data.title + '</h4></div></a></div>';

				});

				$('.PTB18-grid > .row', $block).html(posts);

				// Scroll window to original position
				window.scrollTo(0, scrollPosition);
			}

		}

		// Load posts on launch
		PTB18RenderPosts();

		// On filter change run Ajax query
	    $('.PTB18-filter', $block).on('change', 'input', function() {
			PTB18RenderPosts();
	    });

	    // Add pagination
	    $('.PTB18-more .btn', $block).click(function() {
	    	var currentCount = parseInt($('.PTB18-grid', $block).attr('data-count'));
	    	var newCount = currentCount + 12;
	    	$('.PTB18-grid', $block).attr('data-count', newCount);
	    	PTB18RenderPosts();
	    });

	    // Load filters
	    var filtersContentURL = $block.data('filters_url');

	    $.ajax({
  			async: false,
	        url : 'https://sitebuilder.warwick.ac.uk/sitebuilder2/api/dataentry/entries.json?page=' + filtersContentURL,
	        type: 'GET',
	        dataType: 'json',
	        success: function(data) {				
				$('.PTB18-filter', $block).html(data.items[0].content);

				// Loop through each filter and create checkbox
				$('.PTB18-filter li', $block).each(function() {
					var cat = $(this).text();
					$(this).html('<label><input type="checkbox" value="' + cat + '">' + cat + '</label>');
				});
	        },
	        error: function(data) {
	        	console.log('Could not get filters from ' + filtersContentURL);
	        }
	    });			

	    // Mobile filter button
	    $('.PTB18-filter-button', $block).click(function() {
	    	$('.PTB18-filter', $block).toggleClass('active');
	    	$(this).toggleClass('active');
	    });

		// Check if parameter exists
		if(searchParams.has('PTB18active')) {
			// Get params and split into an array
			let PTB18active = searchParams.get('PTB18active');
			let PTB18ActiveParams = PTB18active.split(',');

			// Set active filters
			$.each(PTB18ActiveParams, function(i, val) {
			  	$('.PTB18-filter input[value="' + val + '"]').prop('checked', true);
			});

			// Render posts
			PTB18RenderPosts();
		}
	});
</script>