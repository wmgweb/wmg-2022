// Responsive
@mixin sm {
    @media(min-width: $bs-sm) {
        @content;
    }
}

@mixin md {
    @media(min-width: $bs-md) {
        @content;
    }
}

@mixin lg {
    @media(min-width: $bs-lg) {
        @content;
    }
}

@mixin xl {
    @media(min-width: $bs-xl) {
        @content;
    }
}



// Theme mixin to provide any element and property with theme colour
$theme-colors: ('dark': $color-dark, 'dark-2': $color-dark-2, 'red': $color-red, 'yellow': $color-yellow, 'gold': $color-gold, 'blue': $color-blue, 'orange': $color-orange, 'darkblue': $color-darkblue, 'green': $color-green, 'lightgrey-1': $color-lightgrey-1, 'lightgrey-2': $color-lightgrey-2, 'lightgrey-3': $color-lightgrey-3, 'grey': $color-grey, 'white': $color-white, 'darkgrey': $color-darkgrey);
$theme-colors-alt: ('red': darken($color-red, 10%), 'yellow': darken($color-yellow, 10%), 'gold': darken($color-gold, 10%), 'blue': darken($color-blue, 10%), 'orange': darken($color-orange, 10%), 'darkblue': darken($color-darkblue, 10%), 'green': darken($color-green, 10%), 'lightgrey-1': darken($color-lightgrey-1, 10%), 'lightgrey-2': darken($color-lightgrey-2, 10%), 'lightgrey-3': darken($color-lightgrey-3, 10%), 'grey': darken($color-grey, 10%), 'white': darken($color-white, 10%));
@mixin theme($property, $element : '', $type : '', $imp : '!important') {
    @each $name, $color in $theme-colors {
        #{$type}.theme--#{$name} #{$element} {
            #{$property}: #{$color} #{$imp};
        }
    }
}

// Theme alt mixin to provide any element and property with theme colour
@mixin themeAlt($property, $element : '', $type : '', $imp : '!important') {
    @each $name, $color in $theme-colors-alt {
        #{$type}.theme--#{$name} #{$element} {
            #{$property}: #{$color} #{$imp};
        }
    }
}

// Background mixin to create multiple bg classes for each colour
@mixin bg($property, $element : '', $type : '') {
    @each $name, $color in $theme-colors {
        #{$type}.bg--#{$name} #{$element} {
            #{$property}: $color !important;
        }
    }
}

// Colour mixin to create multiple color classes for each colour
@mixin colors($property, $class, $subElement : '') {
    @each $name, $color in $theme-colors {
        .#{$class}--#{$name} #{$subElement} {
            #{$property}: #{$color} !important;
        }
    }
}

// Spacing mixin to create multiple classes with spacing px values at 5px increments.
@mixin spacing($property) {
    $count: 0;

    @while $count < 200 {
        .#{$property}--#{$count} {
            #{$property}: #{$count}px !important;
        }

        $count: $count + 5;
    }
}

// Border mixin to create multiple classes with spacing px values at 1px increments.
@mixin border($property) {
    $count: 0;

    @while $count < 50 {
        .#{$property}--#{$count} {
            #{$property}: #{$count}px solid !important;
        }

        $count: $count + 1;
    }
}
